apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: memoryserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: memoryserver
        tier: frontend
    spec:
      containers:
        - image: eu.gcr.io/plenary-vim-176019/api:1.0.0
          name: server
          env:
            - name: database
              # Connect to the SQL proxy over the local network on a fixed port.
              # Change the [PORT] to the port number used by your database
              # (e.g. 3306).
              valueFrom:
                secretKeyRef:
                  name: cloudsql-db-credentials
                  key: connectionString
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ASPNETCORE_PORT
              value: "5000"
            - name: useCloudStorage
              value: "true"
            - name: storageBucketName
              value: memoryproject-reviews-master
			- name: AppInsightsKey
			  valueFrom:
			    secretKeyRef:
				  name: api-keys
				  key: appinsights-api
          ports:
            - containerPort: 5000
              name: memoryserver
        # Change [INSTANCE_CONNECTION_NAME] here to include your GCP
        # project, the region of your Cloud SQL instance and the name
        # of your Cloud SQL instance. The format is
        # $PROJECT:$REGION:$INSTANCE
        # Insert the port number used by your database.
        # [START proxy_container]
        - image: gcr.io/cloudsql-docker/gce-proxy:1.09
          name: cloudsql-proxy
          command: ["/cloud_sql_proxy", "--dir=/cloudsql",
                    "-instances=plenary-vim-176019:europe-west1:memoryproject-db=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
            - name: cloudsql
              mountPath: /cloudsql
        # [END proxy_container]
      # [START volumes]
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
        - name: cloudsql
          emptyDir:
      # [END volumes]